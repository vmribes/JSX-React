{"version":3,"file":"index.umd.js","sources":["../src/factory/TypeFactory.js","../src/utils/checkType.js","../src/types/AnyType.js","../src/utils/isSymbol.js","../src/utils/getPropType.js","../src/utils/getPreciseType.js","../src/types/PrimitiveType.js","../src/types/ArrayType.js","../src/types/BoolType.js","../src/types/FuncType.js","../src/types/NumberType.js","../src/types/ObjectType.js","../src/types/StringType.js","../src/types/SymbolType.js","../src/types/ArrayOfType.js","../src/types/CustomType.js","../src/types/InstanceOfType.js","../src/types/ObjectOfType.js","../src/utils/is.js","../src/types/OneOfType.js","../src/types/OneOfTypeType.js","../src/utils/mapObject.js","../src/types/ShapeType.js","../src/factory/factory.js","../src/index.js"],"sourcesContent":["/**\n * Created by chetanv on 15/06/16.\n */\n\n// import _debug from 'debug';\n// const debug = _debug('TypeFactory');\n\nfunction createPrimitivePropType(Type) {\n  const type = new Type;\n  type.isRequired = new Type(true);\n  return type;\n}\n\nfunction createComplexPropType(Type) {\n  return (...args) => {\n    const type = new Type(...args);\n    Object.defineProperty(type, 'isRequired', {\n      /* eslint-disable func-names, object-shorthand */\n      get: function () {\n        this.valueIsRequired = true;\n        return this;\n      },\n      /* eslint-enable func-names, object-shorthand */\n    });\n    return type;\n  };\n}\n\nclass TypeFactory {\n  types = {};\n  propTypes = {};\n\n  register(Type, asInstance = false) {\n    const typeName = Type.TYPE_NAME;\n\n    if (this.types[typeName]) {\n      throw new Error(`Type ${typeName} already registered.`);\n    }\n\n    this.types[typeName] = Type;\n\n    this.propTypes[typeName] = asInstance ?\n      createPrimitivePropType(Type) :\n      createComplexPropType(Type);\n  }\n\n  fromJson(typeJson) {\n    if (typeof typeJson !== 'object') {\n      throw new Error('Invalid type json passed');\n    }\n\n    const Type = this.types[typeJson.type];\n\n    if (!Type) {\n      throw new Error(`Unknown type '${typeJson.type}' requested`);\n    }\n\n    return Type.fromJson(typeJson);\n  }\n}\n\nexport default TypeFactory;\n","/**\n * Created by chetanv on 17/06/16.\n */\n\n\nfunction checkType(type, Type) {\n  if (type && type !== Type.TYPE_NAME) {\n    throw new Error(\n      `Invalid type detected: ${type} while creating ${Type.name} instance`\n    );\n  }\n}\n\nexport default checkType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport checkType from '../utils/checkType';\n\nclass AnyType {\n  static TYPE_NAME = 'any';\n\n  static fromJson(obj) {\n    checkType(obj.type, AnyType);\n    return new AnyType(obj.required);\n  }\n\n  valueIsRequired = false;\n\n  constructor(required = false) {\n    this.valueIsRequired = required;\n  }\n\n  validate(value) {\n    if (value == null && this.valueIsRequired) {\n      return new Error('Required value was not specified');\n    }\n\n    return null;\n  }\n\n  required() {\n    return this.valueIsRequired;\n  }\n\n  toJson() {\n    return {\n      type: AnyType.TYPE_NAME,\n      required: this.valueIsRequired,\n    };\n  }\n}\n\nexport default AnyType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\n/**\n *\n * This source code was taken from\n * https://github.com/facebook/react/blob/master/src/isomorphic/classic/types/ReactPropTypes.js\n *\n * Following is the license as per the file mentioned above\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\nfunction isSymbol(propValue) {\n  const propType = typeof propValue;\n\n  // Native Symbol.\n  if (propType === 'symbol') {\n    return true;\n  }\n\n  // following code is just to make things work when probably not in right env\n  // mostly, the above code should handle things fine.\n\n  /* istanbul ignore next */\n  if (propValue) {\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default isSymbol;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\n/**\n *\n * This source code was taken from\n * https://github.com/facebook/react/blob/master/src/isomorphic/classic/types/ReactPropTypes.js\n *\n * Following is the license as per the file mentioned above\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\nimport isSymbol from './isSymbol';\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  const propType = typeof propValue;\n\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n\n  if (isSymbol(propValue)) {\n    return 'symbol';\n  }\n\n  return propType;\n}\n\nexport default getPropType;\n","/**\n * Created by chetanv on 11/06/16.\n */\n\n/**\n *\n * This source code was taken from\n * https://github.com/facebook/react/blob/master/src/isomorphic/classic/types/ReactPropTypes.js\n *\n * Following is the license as per the file mentioned above\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\nimport getPropType from './getPropType';\n\nfunction getPreciseType(propValue) {\n  const propType = getPropType(propValue);\n\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n\n  return propType;\n}\n\nexport default getPreciseType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport AnyType from './AnyType';\nimport getPropType from '../utils/getPropType';\nimport getPreciseType from '../utils/getPreciseType';\nimport checkType from '../utils/checkType';\n\nclass PrimitiveType extends AnyType {\n  static primitiveFromJson(obj, Type) {\n    checkType(obj.type, Type);\n    return new Type(obj.required);\n  }\n\n  type = null;\n\n  constructor(type, required = false) {\n    super(required);\n    this.type = type;\n  }\n\n  validate(value) {\n    let err = super.validate(value);\n    if (err) {\n      return err;\n    }\n\n    if (value !== null && value !== undefined) {\n      const propType = getPropType(value);\n      if (propType !== this.type) {\n        const preciseType = getPreciseType(value);\n        err = new Error(\n          `Invalid value of ${preciseType}` +\n          ` type supplied, expected ${this.type}.`\n        );\n      }\n    }\n\n    return err;\n  }\n\n  toJson() {\n    return {\n      type: this.type,\n      required: this.valueIsRequired,\n    };\n  }\n}\n\nexport default PrimitiveType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport PrimitiveType from './PrimitiveType';\n\n\nclass ArrayType extends PrimitiveType {\n  static TYPE_NAME = 'array';\n\n  static fromJson(obj) {\n    return PrimitiveType.primitiveFromJson(obj, ArrayType);\n  }\n\n  constructor(required = false) {\n    super(ArrayType.TYPE_NAME, required);\n  }\n}\n\nexport default ArrayType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport PrimitiveType from './PrimitiveType';\n\nclass BoolType extends PrimitiveType {\n  static TYPE_NAME = 'bool';\n\n  static fromJson(obj) {\n    return PrimitiveType.primitiveFromJson(obj, BoolType);\n  }\n\n  constructor(required = false) {\n    super('boolean', required);\n  }\n\n  toJson() {\n    return {\n      type: BoolType.TYPE_NAME,\n      required: this.required(),\n    };\n  }\n}\n\nexport default BoolType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport PrimitiveType from './PrimitiveType';\n\nclass FuncType extends PrimitiveType {\n  static TYPE_NAME = 'func';\n\n  static fromJson(obj) {\n    return PrimitiveType.primitiveFromJson(obj, FuncType);\n  }\n\n  constructor(required = false) {\n    super('function', required);\n  }\n\n  toJson() {\n    return {\n      type: FuncType.TYPE_NAME,\n      required: this.required(),\n    };\n  }\n}\n\nexport default FuncType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport PrimitiveType from './PrimitiveType';\n\nclass NumberType extends PrimitiveType {\n  static TYPE_NAME = 'number';\n\n  static fromJson(obj) {\n    return PrimitiveType.primitiveFromJson(obj, NumberType);\n  }\n\n  constructor(required = false) {\n    super('number', required);\n  }\n}\n\nexport default NumberType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport PrimitiveType from './PrimitiveType';\n\nclass ObjectType extends PrimitiveType {\n  static TYPE_NAME = 'object';\n\n  static fromJson(obj) {\n    return PrimitiveType.primitiveFromJson(obj, ObjectType);\n  }\n\n  constructor(required = false) {\n    super(ObjectType.TYPE_NAME, required);\n  }\n}\n\nexport default ObjectType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport PrimitiveType from './PrimitiveType';\n\nclass StringType extends PrimitiveType {\n  static TYPE_NAME = 'string';\n\n  static fromJson(obj) {\n    return PrimitiveType.primitiveFromJson(obj, StringType);\n  }\n\n  constructor(required = false) {\n    super(StringType.TYPE_NAME, required);\n  }\n}\n\nexport default StringType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport PrimitiveType from './PrimitiveType';\n\nclass SymbolType extends PrimitiveType {\n  static TYPE_NAME = 'symbol';\n\n  static fromJson(obj) {\n    return PrimitiveType.primitiveFromJson(obj, SymbolType);\n  }\n\n  constructor(required = false) {\n    super(SymbolType.TYPE_NAME, required);\n  }\n}\n\nexport default SymbolType;\n","/**\n * Created by chetanv on 11/06/16.\n */\n\nimport AnyType from './AnyType';\nimport ArrayType from './ArrayType';\nimport factory from '../factory/factory';\nimport checkType from '../utils/checkType';\n\n// import _debug from 'debug';\n// const debug = _debug('ArrayOfType');\n\nclass ArrayOfType extends ArrayType {\n  static TYPE_NAME = 'arrayOf';\n\n  static fromJson(obj) {\n    checkType(obj.type, ArrayOfType);\n    return new ArrayOfType(factory.fromJson(obj.arrayOf), obj.required);\n  }\n\n  arrayOf = null;\n\n  constructor(arrayOf, required = false) {\n    super(required);\n\n    if (!(arrayOf instanceof AnyType)) {\n      throw new Error('Invalid PropType notation inside arrayOf.');\n    }\n    this.arrayOf = arrayOf;\n  }\n\n  validate(value) {\n    let err = super.validate(value);\n\n    if (err) {\n      return err;\n    }\n\n    const valueToValidate = value || [];\n    for (const valueItem of valueToValidate) {\n      err = this.arrayOf.validate(valueItem);\n      if (err) {\n        return err;\n      }\n    }\n\n    return null;\n  }\n\n  toJson() {\n    return {\n      type: ArrayOfType.TYPE_NAME,\n      required: this.valueIsRequired,\n      arrayOf: this.arrayOf.toJson(),\n    };\n  }\n}\n\nexport default ArrayOfType;\n","/**\n * Created by chetanv on 17/06/16.\n */\n\nimport AnyType from './AnyType';\n\nclass CustomType extends AnyType {\n  static TYPE_NAME = 'custom';\n\n  static fromJson() {\n    throw new Error(\n      'CustomType can not be created from json object.' +\n      ' It requires a function to validate the value.'\n    );\n  }\n\n  validator = null;\n\n  constructor(validator, required = false) {\n    super(required);\n    if (typeof validator !== 'function') {\n      throw new Error('Invalid validator function supplied to CustomType');\n    }\n\n    this.validator = validator;\n  }\n\n  validate(value) {\n    let err = super.validate(value);\n    if (err) {\n      return err;\n    }\n\n    if (value !== undefined && value !== null) {\n      err = this.validator(value);\n    }\n\n    return err;\n  }\n\n  toJson() {\n    throw new Error('CustomType can not be serialized to a json object.');\n  }\n}\n\nexport default CustomType;\n","/**\n * Created by chetanv on 11/06/16.\n */\n\nimport AnyType from './AnyType';\n\n// import _debug from 'debug';\n// const debug = _debug('InstanceOfType');\n\nclass InstanceOfType extends AnyType {\n  static TYPE_NAME = 'instanceOf';\n\n  static fromJson() {\n    throw new Error(\n      'InstanceOfType can not be created from json object.' +\n      ' It requires a class/constructor function to validate the value.'\n    );\n  }\n\n  InstanceOf = null;\n\n  constructor(InstanceOf, required = false) {\n    super(required);\n\n    if (typeof InstanceOf !== 'function') {\n      throw new Error('Invalid class passed to InstanceOf type');\n    }\n    this.InstanceOf = InstanceOf;\n  }\n\n  validate(value) {\n    const err = super.validate(value);\n    if (err) {\n      return err;\n    }\n\n    if (value && !(value instanceof this.InstanceOf)) {\n      return new Error(\n        'Invalid value supplied. ' +\n        `Expect value to be an instance of ${this.InstanceOf.name}`\n      );\n    }\n\n    return null;\n  }\n\n  toJson() {\n    throw new Error('InstanceOfType can not be serialized to a json object.');\n  }\n}\n\nexport default InstanceOfType;\n","/**\n * Created by chetanv on 11/06/16.\n */\n\nimport AnyType from './AnyType';\nimport ObjectType from './ObjectType';\nimport factory from '../factory/factory';\nimport checkType from '../utils/checkType';\n\nclass ObjectOfType extends ObjectType {\n  static TYPE_NAME = 'objectOf';\n\n  static fromJson(obj) {\n    checkType(obj.type, ObjectOfType);\n    return new ObjectOfType(factory.fromJson(obj.objectOf), obj.required);\n  }\n\n  objectOf = null;\n\n  constructor(objectOf, required = false) {\n    super(required);\n\n    if (!(objectOf instanceof AnyType)) {\n      throw new Error('Invalid PropType notation inside ObjectOf.');\n    }\n\n    this.objectOf = objectOf;\n  }\n\n  validate(value) {\n    let err = super.validate(value);\n    if (err) {\n      return err;\n    }\n\n    const valueToValidate = value || {};\n\n    const keys = Object.keys(valueToValidate);\n\n    for (const key of keys) {\n      err = this.objectOf.validate(valueToValidate[key]);\n      if (err) {\n        return err;\n      }\n    }\n\n    return null;\n  }\n\n  toJson() {\n    return {\n      type: ObjectOfType.TYPE_NAME,\n      required: this.required(),\n      objectOf: this.objectOf.toJson(),\n    };\n  }\n}\n\nexport default ObjectOfType;\n","/**\n * Created by chetanv on 13/06/16.\n */\n\n/**\n * inlined Object.is polyfill\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n/* eslint-disable no-self-compare */\nfunction is(x, y) {\n  let ret = false;\n  // SameValue algorithm\n  if (x === y) { // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    ret = (x !== 0 || 1 / x === 1 / y);\n  } else {\n    // Step 6.a: NaN == NaN\n    ret = (x !== x && y !== y);\n  }\n\n  return ret;\n}\n/* eslint-enable no-self-compare */\n\nexport default is;\n","/**\n * Created by chetanv on 13/06/16.\n */\n\nimport AnyType from './AnyType';\nimport is from '../utils/is';\nimport checkType from '../utils/checkType';\n\nclass OneOfType extends AnyType {\n  static TYPE_NAME = 'oneOf';\n\n  static fromJson(obj) {\n    checkType(obj.type, OneOfType);\n    return new OneOfType(obj.oneOf, obj.required);\n  }\n\n  oneOf = [];\n\n  constructor(oneOf, required = false) {\n    super(required);\n\n    if (!Array.isArray(oneOf)) {\n      throw new Error(\n        'Invalid argument supplied to oneOf, expected an instance of array.'\n      );\n    }\n\n    this.oneOf = oneOf;\n  }\n\n  validate(value) {\n    const err = super.validate(value);\n    if (err) {\n      return err;\n    }\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    for (const expectedValue of this.oneOf) {\n      if (is(value, expectedValue)) {\n        return null;\n      }\n    }\n\n    return new Error(\n      `Ivalid value ${value} given. ` +\n      `Expected one of ${JSON.stringify(this.oneOf)}`\n    );\n  }\n\n  toJson() {\n    return {\n      type: OneOfType.TYPE_NAME,\n      required: this.required(),\n      oneOf: this.oneOf,\n    };\n  }\n}\n\nexport default OneOfType;\n","/**\n * Created by chetanv on 13/06/16.\n */\n\nimport AnyType from './AnyType';\nimport factory from '../factory/factory';\nimport checkType from '../utils/checkType';\n\nclass OneOfTypeType extends AnyType {\n  static TYPE_NAME = 'oneOfType';\n\n  static fromJson(obj) {\n    checkType(obj.type, OneOfTypeType);\n    return new OneOfTypeType(\n      obj.oneOfType.map(typeJson => factory.fromJson(typeJson)),\n      obj.required,\n    );\n  }\n\n  oneOfType = null;\n\n  constructor(oneOfType, required = false) {\n    super(required);\n\n    if (!Array.isArray(oneOfType)) {\n      throw new Error(\n        'Invalid argument supplied to oneOfType, expected an instance of array.'\n      );\n    }\n\n    for (const type of oneOfType) {\n      if (!(type instanceof AnyType)) {\n        throw new Error('Invalid type supplied to oneOfType array of types');\n      }\n    }\n\n    this.oneOfType = oneOfType;\n  }\n\n  validate(value) {\n    const err = super.validate(value);\n    if (err) {\n      return err;\n    }\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    for (const type of this.oneOfType) {\n      if (type.validate(value) === null) {\n        return null;\n      }\n    }\n\n    return new Error('Invalid value supplied');\n  }\n\n  toJson() {\n    return {\n      type: OneOfTypeType.TYPE_NAME,\n      required: this.required(),\n      oneOfType: this.oneOfType.map(type => type.toJson()),\n    };\n  }\n}\n\nexport default OneOfTypeType;\n","/**\n * Created by chetanv on 17/06/16.\n */\n\nfunction mapObject(obj, fn) {\n  if (typeof obj !== 'object') {\n    throw new Error('Expected an object as the first argument');\n  }\n\n  if (typeof fn !== 'function') {\n    throw new Error('Expected second argument to be a function');\n  }\n\n  const keys = Object.keys(obj);\n  const mappedObj = {};\n  for (const key of keys) {\n    mappedObj[key] = fn(obj[key], key);\n  }\n  return mappedObj;\n}\n\nexport default mapObject;\n","/**\n * Created by chetanv on 13/06/16.\n */\n\nimport ObjectType from './ObjectType';\nimport AnyType from './AnyType';\nimport getPropType from '../utils/getPropType';\nimport factory from '../factory/factory';\nimport checkType from '../utils/checkType';\nimport mapObject from '../utils/mapObject';\n\nclass ShapeType extends ObjectType {\n  static TYPE_NAME = 'shape';\n\n  static fromJson(obj) {\n    checkType(obj.type, ShapeType);\n    return new ShapeType(\n      mapObject(obj.shape, (typeJson) => factory.fromJson(typeJson)),\n      obj.required\n    );\n  }\n\n  shape = null;\n\n  constructor(shape, required = false) {\n    super(required);\n\n    if (getPropType(shape) !== 'object') {\n      throw new Error('Invalid shape object supplied to shapeType.');\n    }\n\n    const keys = Object.keys(shape);\n\n    for (const key of keys) {\n      if (!(shape[key] instanceof AnyType)) {\n        throw new Error('Invalid type supplied to shape type');\n      }\n    }\n\n    this.shape = shape;\n  }\n\n  validate(value) {\n    let err = super.validate(value);\n    if (err) {\n      return err;\n    }\n\n    if (value !== null && value !== undefined) {\n      const keys = Object.keys(this.shape);\n      for (const key of keys) {\n        err = this.shape[key].validate(value[key]);\n        if (err) {\n          return err;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  toJson() {\n    return {\n      type: ShapeType.TYPE_NAME,\n      required: this.required(),\n      shape: mapObject(this.shape, (type) => type.toJson()),\n    };\n  }\n}\n\nexport default ShapeType;\n","/**\n * Created by chetanv on 15/06/16.\n */\n\nimport TypeFactory from './TypeFactory';\n\nimport AnyType from '../types/AnyType';\nimport ArrayType from '../types/ArrayType';\nimport BoolType from '../types/BoolType';\nimport FuncType from '../types/FuncType';\nimport NumberType from '../types/NumberType';\nimport ObjectType from '../types/ObjectType';\nimport StringType from '../types/StringType';\nimport SymbolType from '../types/SymbolType';\n\nimport ArrayOfType from '../types/ArrayOfType';\nimport CustomType from '../types/CustomType';\nimport InstanceOfType from '../types/InstanceOfType';\nimport ObjectOfType from '../types/ObjectOfType';\nimport OneOfType from '../types/OneOfType';\nimport OneOfTypeType from '../types/OneOfTypeType';\nimport ShapeType from '../types/ShapeType';\n\n// import _debug from 'debug';\n// const debug = _debug('factory');\n\nconst factory = new TypeFactory;\nfactory.register(AnyType, true);\nfactory.register(ArrayType, true);\nfactory.register(BoolType, true);\nfactory.register(FuncType, true);\nfactory.register(NumberType, true);\nfactory.register(ObjectType, true);\nfactory.register(StringType, true);\nfactory.register(SymbolType, true);\n\nfactory.register(ArrayOfType);\nfactory.register(CustomType);\nfactory.register(InstanceOfType);\nfactory.register(ObjectOfType);\nfactory.register(OneOfType);\nfactory.register(OneOfTypeType);\nfactory.register(ShapeType);\n\nexport default factory;\n","/**\n * Babel Starter Kit (https://www.kriasoft.com/babel-starter-kit)\n *\n * Copyright © 2015-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport factory from './factory/factory';\n\nimport AnyType from './types/AnyType';\nimport ArrayType from './types/ArrayType';\nimport BoolType from './types/BoolType';\nimport FuncType from './types/FuncType';\nimport NumberType from './types/NumberType';\nimport ObjectType from './types/ObjectType';\nimport StringType from './types/StringType';\nimport SymbolType from './types/SymbolType';\n\nimport ArrayOfType from './types/ArrayOfType';\nimport InstanceOfType from './types/InstanceOfType';\nimport ObjectOfType from './types/ObjectOfType';\nimport OneOfType from './types/OneOfType';\nimport OneOfTypeType from './types/OneOfTypeType';\nimport ShapeType from './types/ShapeType';\n\n// import _debug from 'debug';\n// const debug = _debug('index');\n\nconst PropTypes = factory.propTypes;\n\nexport {\n  PropTypes,\n\n  AnyType,\n  ArrayType,\n  BoolType,\n  FuncType,\n  NumberType,\n  ObjectType,\n  StringType,\n  SymbolType,\n\n  ArrayOfType,\n  InstanceOfType,\n  ObjectOfType,\n  OneOfType,\n  OneOfTypeType,\n  ShapeType,\n};\n\nexport default factory;\n"],"names":[],"mappings":"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"}