{"version":3,"file":"index.js","sources":["../src/factory/TypeFactory.js","../src/utils/checkType.js","../src/types/AnyType.js","../src/utils/isSymbol.js","../src/utils/getPropType.js","../src/utils/getPreciseType.js","../src/types/PrimitiveType.js","../src/types/ArrayType.js","../src/types/BoolType.js","../src/types/FuncType.js","../src/types/NumberType.js","../src/types/ObjectType.js","../src/types/StringType.js","../src/types/SymbolType.js","../src/types/ArrayOfType.js","../src/types/CustomType.js","../src/types/InstanceOfType.js","../src/types/ObjectOfType.js","../src/utils/is.js","../src/types/OneOfType.js","../src/types/OneOfTypeType.js","../src/utils/mapObject.js","../src/types/ShapeType.js","../src/factory/factory.js","../src/index.js"],"sourcesContent":["/**\n * Created by chetanv on 15/06/16.\n */\n\n// import _debug from 'debug';\n// const debug = _debug('TypeFactory');\n\nfunction createPrimitivePropType(Type) {\n  const type = new Type;\n  type.isRequired = new Type(true);\n  return type;\n}\n\nfunction createComplexPropType(Type) {\n  return (...args) => {\n    const type = new Type(...args);\n    Object.defineProperty(type, 'isRequired', {\n      /* eslint-disable func-names, object-shorthand */\n      get: function () {\n        this.valueIsRequired = true;\n        return this;\n      },\n      /* eslint-enable func-names, object-shorthand */\n    });\n    return type;\n  };\n}\n\nclass TypeFactory {\n  types = {};\n  propTypes = {};\n\n  register(Type, asInstance = false) {\n    const typeName = Type.TYPE_NAME;\n\n    if (this.types[typeName]) {\n      throw new Error(`Type ${typeName} already registered.`);\n    }\n\n    this.types[typeName] = Type;\n\n    this.propTypes[typeName] = asInstance ?\n      createPrimitivePropType(Type) :\n      createComplexPropType(Type);\n  }\n\n  fromJson(typeJson) {\n    if (typeof typeJson !== 'object') {\n      throw new Error('Invalid type json passed');\n    }\n\n    const Type = this.types[typeJson.type];\n\n    if (!Type) {\n      throw new Error(`Unknown type '${typeJson.type}' requested`);\n    }\n\n    return Type.fromJson(typeJson);\n  }\n}\n\nexport default TypeFactory;\n","/**\n * Created by chetanv on 17/06/16.\n */\n\n\nfunction checkType(type, Type) {\n  if (type && type !== Type.TYPE_NAME) {\n    throw new Error(\n      `Invalid type detected: ${type} while creating ${Type.name} instance`\n    );\n  }\n}\n\nexport default checkType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport checkType from '../utils/checkType';\n\nclass AnyType {\n  static TYPE_NAME = 'any';\n\n  static fromJson(obj) {\n    checkType(obj.type, AnyType);\n    return new AnyType(obj.required);\n  }\n\n  valueIsRequired = false;\n\n  constructor(required = false) {\n    this.valueIsRequired = required;\n  }\n\n  validate(value) {\n    if (value == null && this.valueIsRequired) {\n      return new Error('Required value was not specified');\n    }\n\n    return null;\n  }\n\n  required() {\n    return this.valueIsRequired;\n  }\n\n  toJson() {\n    return {\n      type: AnyType.TYPE_NAME,\n      required: this.valueIsRequired,\n    };\n  }\n}\n\nexport default AnyType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\n/**\n *\n * This source code was taken from\n * https://github.com/facebook/react/blob/master/src/isomorphic/classic/types/ReactPropTypes.js\n *\n * Following is the license as per the file mentioned above\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\nfunction isSymbol(propValue) {\n  const propType = typeof propValue;\n\n  // Native Symbol.\n  if (propType === 'symbol') {\n    return true;\n  }\n\n  // following code is just to make things work when probably not in right env\n  // mostly, the above code should handle things fine.\n\n  /* istanbul ignore next */\n  if (propValue) {\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default isSymbol;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\n/**\n *\n * This source code was taken from\n * https://github.com/facebook/react/blob/master/src/isomorphic/classic/types/ReactPropTypes.js\n *\n * Following is the license as per the file mentioned above\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\nimport isSymbol from './isSymbol';\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  const propType = typeof propValue;\n\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n\n  if (isSymbol(propValue)) {\n    return 'symbol';\n  }\n\n  return propType;\n}\n\nexport default getPropType;\n","/**\n * Created by chetanv on 11/06/16.\n */\n\n/**\n *\n * This source code was taken from\n * https://github.com/facebook/react/blob/master/src/isomorphic/classic/types/ReactPropTypes.js\n *\n * Following is the license as per the file mentioned above\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\nimport getPropType from './getPropType';\n\nfunction getPreciseType(propValue) {\n  const propType = getPropType(propValue);\n\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n\n  return propType;\n}\n\nexport default getPreciseType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport AnyType from './AnyType';\nimport getPropType from '../utils/getPropType';\nimport getPreciseType from '../utils/getPreciseType';\nimport checkType from '../utils/checkType';\n\nclass PrimitiveType extends AnyType {\n  static primitiveFromJson(obj, Type) {\n    checkType(obj.type, Type);\n    return new Type(obj.required);\n  }\n\n  type = null;\n\n  constructor(type, required = false) {\n    super(required);\n    this.type = type;\n  }\n\n  validate(value) {\n    let err = super.validate(value);\n    if (err) {\n      return err;\n    }\n\n    if (value !== null && value !== undefined) {\n      const propType = getPropType(value);\n      if (propType !== this.type) {\n        const preciseType = getPreciseType(value);\n        err = new Error(\n          `Invalid value of ${preciseType}` +\n          ` type supplied, expected ${this.type}.`\n        );\n      }\n    }\n\n    return err;\n  }\n\n  toJson() {\n    return {\n      type: this.type,\n      required: this.valueIsRequired,\n    };\n  }\n}\n\nexport default PrimitiveType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport PrimitiveType from './PrimitiveType';\n\n\nclass ArrayType extends PrimitiveType {\n  static TYPE_NAME = 'array';\n\n  static fromJson(obj) {\n    return PrimitiveType.primitiveFromJson(obj, ArrayType);\n  }\n\n  constructor(required = false) {\n    super(ArrayType.TYPE_NAME, required);\n  }\n}\n\nexport default ArrayType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport PrimitiveType from './PrimitiveType';\n\nclass BoolType extends PrimitiveType {\n  static TYPE_NAME = 'bool';\n\n  static fromJson(obj) {\n    return PrimitiveType.primitiveFromJson(obj, BoolType);\n  }\n\n  constructor(required = false) {\n    super('boolean', required);\n  }\n\n  toJson() {\n    return {\n      type: BoolType.TYPE_NAME,\n      required: this.required(),\n    };\n  }\n}\n\nexport default BoolType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport PrimitiveType from './PrimitiveType';\n\nclass FuncType extends PrimitiveType {\n  static TYPE_NAME = 'func';\n\n  static fromJson(obj) {\n    return PrimitiveType.primitiveFromJson(obj, FuncType);\n  }\n\n  constructor(required = false) {\n    super('function', required);\n  }\n\n  toJson() {\n    return {\n      type: FuncType.TYPE_NAME,\n      required: this.required(),\n    };\n  }\n}\n\nexport default FuncType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport PrimitiveType from './PrimitiveType';\n\nclass NumberType extends PrimitiveType {\n  static TYPE_NAME = 'number';\n\n  static fromJson(obj) {\n    return PrimitiveType.primitiveFromJson(obj, NumberType);\n  }\n\n  constructor(required = false) {\n    super('number', required);\n  }\n}\n\nexport default NumberType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport PrimitiveType from './PrimitiveType';\n\nclass ObjectType extends PrimitiveType {\n  static TYPE_NAME = 'object';\n\n  static fromJson(obj) {\n    return PrimitiveType.primitiveFromJson(obj, ObjectType);\n  }\n\n  constructor(required = false) {\n    super(ObjectType.TYPE_NAME, required);\n  }\n}\n\nexport default ObjectType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport PrimitiveType from './PrimitiveType';\n\nclass StringType extends PrimitiveType {\n  static TYPE_NAME = 'string';\n\n  static fromJson(obj) {\n    return PrimitiveType.primitiveFromJson(obj, StringType);\n  }\n\n  constructor(required = false) {\n    super(StringType.TYPE_NAME, required);\n  }\n}\n\nexport default StringType;\n","/**\n * Created by chetanv on 10/06/16.\n */\n\nimport PrimitiveType from './PrimitiveType';\n\nclass SymbolType extends PrimitiveType {\n  static TYPE_NAME = 'symbol';\n\n  static fromJson(obj) {\n    return PrimitiveType.primitiveFromJson(obj, SymbolType);\n  }\n\n  constructor(required = false) {\n    super(SymbolType.TYPE_NAME, required);\n  }\n}\n\nexport default SymbolType;\n","/**\n * Created by chetanv on 11/06/16.\n */\n\nimport AnyType from './AnyType';\nimport ArrayType from './ArrayType';\nimport factory from '../factory/factory';\nimport checkType from '../utils/checkType';\n\n// import _debug from 'debug';\n// const debug = _debug('ArrayOfType');\n\nclass ArrayOfType extends ArrayType {\n  static TYPE_NAME = 'arrayOf';\n\n  static fromJson(obj) {\n    checkType(obj.type, ArrayOfType);\n    return new ArrayOfType(factory.fromJson(obj.arrayOf), obj.required);\n  }\n\n  arrayOf = null;\n\n  constructor(arrayOf, required = false) {\n    super(required);\n\n    if (!(arrayOf instanceof AnyType)) {\n      throw new Error('Invalid PropType notation inside arrayOf.');\n    }\n    this.arrayOf = arrayOf;\n  }\n\n  validate(value) {\n    let err = super.validate(value);\n\n    if (err) {\n      return err;\n    }\n\n    const valueToValidate = value || [];\n    for (const valueItem of valueToValidate) {\n      err = this.arrayOf.validate(valueItem);\n      if (err) {\n        return err;\n      }\n    }\n\n    return null;\n  }\n\n  toJson() {\n    return {\n      type: ArrayOfType.TYPE_NAME,\n      required: this.valueIsRequired,\n      arrayOf: this.arrayOf.toJson(),\n    };\n  }\n}\n\nexport default ArrayOfType;\n","/**\n * Created by chetanv on 17/06/16.\n */\n\nimport AnyType from './AnyType';\n\nclass CustomType extends AnyType {\n  static TYPE_NAME = 'custom';\n\n  static fromJson() {\n    throw new Error(\n      'CustomType can not be created from json object.' +\n      ' It requires a function to validate the value.'\n    );\n  }\n\n  validator = null;\n\n  constructor(validator, required = false) {\n    super(required);\n    if (typeof validator !== 'function') {\n      throw new Error('Invalid validator function supplied to CustomType');\n    }\n\n    this.validator = validator;\n  }\n\n  validate(value) {\n    let err = super.validate(value);\n    if (err) {\n      return err;\n    }\n\n    if (value !== undefined && value !== null) {\n      err = this.validator(value);\n    }\n\n    return err;\n  }\n\n  toJson() {\n    throw new Error('CustomType can not be serialized to a json object.');\n  }\n}\n\nexport default CustomType;\n","/**\n * Created by chetanv on 11/06/16.\n */\n\nimport AnyType from './AnyType';\n\n// import _debug from 'debug';\n// const debug = _debug('InstanceOfType');\n\nclass InstanceOfType extends AnyType {\n  static TYPE_NAME = 'instanceOf';\n\n  static fromJson() {\n    throw new Error(\n      'InstanceOfType can not be created from json object.' +\n      ' It requires a class/constructor function to validate the value.'\n    );\n  }\n\n  InstanceOf = null;\n\n  constructor(InstanceOf, required = false) {\n    super(required);\n\n    if (typeof InstanceOf !== 'function') {\n      throw new Error('Invalid class passed to InstanceOf type');\n    }\n    this.InstanceOf = InstanceOf;\n  }\n\n  validate(value) {\n    const err = super.validate(value);\n    if (err) {\n      return err;\n    }\n\n    if (value && !(value instanceof this.InstanceOf)) {\n      return new Error(\n        'Invalid value supplied. ' +\n        `Expect value to be an instance of ${this.InstanceOf.name}`\n      );\n    }\n\n    return null;\n  }\n\n  toJson() {\n    throw new Error('InstanceOfType can not be serialized to a json object.');\n  }\n}\n\nexport default InstanceOfType;\n","/**\n * Created by chetanv on 11/06/16.\n */\n\nimport AnyType from './AnyType';\nimport ObjectType from './ObjectType';\nimport factory from '../factory/factory';\nimport checkType from '../utils/checkType';\n\nclass ObjectOfType extends ObjectType {\n  static TYPE_NAME = 'objectOf';\n\n  static fromJson(obj) {\n    checkType(obj.type, ObjectOfType);\n    return new ObjectOfType(factory.fromJson(obj.objectOf), obj.required);\n  }\n\n  objectOf = null;\n\n  constructor(objectOf, required = false) {\n    super(required);\n\n    if (!(objectOf instanceof AnyType)) {\n      throw new Error('Invalid PropType notation inside ObjectOf.');\n    }\n\n    this.objectOf = objectOf;\n  }\n\n  validate(value) {\n    let err = super.validate(value);\n    if (err) {\n      return err;\n    }\n\n    const valueToValidate = value || {};\n\n    const keys = Object.keys(valueToValidate);\n\n    for (const key of keys) {\n      err = this.objectOf.validate(valueToValidate[key]);\n      if (err) {\n        return err;\n      }\n    }\n\n    return null;\n  }\n\n  toJson() {\n    return {\n      type: ObjectOfType.TYPE_NAME,\n      required: this.required(),\n      objectOf: this.objectOf.toJson(),\n    };\n  }\n}\n\nexport default ObjectOfType;\n","/**\n * Created by chetanv on 13/06/16.\n */\n\n/**\n * inlined Object.is polyfill\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n/* eslint-disable no-self-compare */\nfunction is(x, y) {\n  let ret = false;\n  // SameValue algorithm\n  if (x === y) { // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    ret = (x !== 0 || 1 / x === 1 / y);\n  } else {\n    // Step 6.a: NaN == NaN\n    ret = (x !== x && y !== y);\n  }\n\n  return ret;\n}\n/* eslint-enable no-self-compare */\n\nexport default is;\n","/**\n * Created by chetanv on 13/06/16.\n */\n\nimport AnyType from './AnyType';\nimport is from '../utils/is';\nimport checkType from '../utils/checkType';\n\nclass OneOfType extends AnyType {\n  static TYPE_NAME = 'oneOf';\n\n  static fromJson(obj) {\n    checkType(obj.type, OneOfType);\n    return new OneOfType(obj.oneOf, obj.required);\n  }\n\n  oneOf = [];\n\n  constructor(oneOf, required = false) {\n    super(required);\n\n    if (!Array.isArray(oneOf)) {\n      throw new Error(\n        'Invalid argument supplied to oneOf, expected an instance of array.'\n      );\n    }\n\n    this.oneOf = oneOf;\n  }\n\n  validate(value) {\n    const err = super.validate(value);\n    if (err) {\n      return err;\n    }\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    for (const expectedValue of this.oneOf) {\n      if (is(value, expectedValue)) {\n        return null;\n      }\n    }\n\n    return new Error(\n      `Ivalid value ${value} given. ` +\n      `Expected one of ${JSON.stringify(this.oneOf)}`\n    );\n  }\n\n  toJson() {\n    return {\n      type: OneOfType.TYPE_NAME,\n      required: this.required(),\n      oneOf: this.oneOf,\n    };\n  }\n}\n\nexport default OneOfType;\n","/**\n * Created by chetanv on 13/06/16.\n */\n\nimport AnyType from './AnyType';\nimport factory from '../factory/factory';\nimport checkType from '../utils/checkType';\n\nclass OneOfTypeType extends AnyType {\n  static TYPE_NAME = 'oneOfType';\n\n  static fromJson(obj) {\n    checkType(obj.type, OneOfTypeType);\n    return new OneOfTypeType(\n      obj.oneOfType.map(typeJson => factory.fromJson(typeJson)),\n      obj.required,\n    );\n  }\n\n  oneOfType = null;\n\n  constructor(oneOfType, required = false) {\n    super(required);\n\n    if (!Array.isArray(oneOfType)) {\n      throw new Error(\n        'Invalid argument supplied to oneOfType, expected an instance of array.'\n      );\n    }\n\n    for (const type of oneOfType) {\n      if (!(type instanceof AnyType)) {\n        throw new Error('Invalid type supplied to oneOfType array of types');\n      }\n    }\n\n    this.oneOfType = oneOfType;\n  }\n\n  validate(value) {\n    const err = super.validate(value);\n    if (err) {\n      return err;\n    }\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    for (const type of this.oneOfType) {\n      if (type.validate(value) === null) {\n        return null;\n      }\n    }\n\n    return new Error('Invalid value supplied');\n  }\n\n  toJson() {\n    return {\n      type: OneOfTypeType.TYPE_NAME,\n      required: this.required(),\n      oneOfType: this.oneOfType.map(type => type.toJson()),\n    };\n  }\n}\n\nexport default OneOfTypeType;\n","/**\n * Created by chetanv on 17/06/16.\n */\n\nfunction mapObject(obj, fn) {\n  if (typeof obj !== 'object') {\n    throw new Error('Expected an object as the first argument');\n  }\n\n  if (typeof fn !== 'function') {\n    throw new Error('Expected second argument to be a function');\n  }\n\n  const keys = Object.keys(obj);\n  const mappedObj = {};\n  for (const key of keys) {\n    mappedObj[key] = fn(obj[key], key);\n  }\n  return mappedObj;\n}\n\nexport default mapObject;\n","/**\n * Created by chetanv on 13/06/16.\n */\n\nimport ObjectType from './ObjectType';\nimport AnyType from './AnyType';\nimport getPropType from '../utils/getPropType';\nimport factory from '../factory/factory';\nimport checkType from '../utils/checkType';\nimport mapObject from '../utils/mapObject';\n\nclass ShapeType extends ObjectType {\n  static TYPE_NAME = 'shape';\n\n  static fromJson(obj) {\n    checkType(obj.type, ShapeType);\n    return new ShapeType(\n      mapObject(obj.shape, (typeJson) => factory.fromJson(typeJson)),\n      obj.required\n    );\n  }\n\n  shape = null;\n\n  constructor(shape, required = false) {\n    super(required);\n\n    if (getPropType(shape) !== 'object') {\n      throw new Error('Invalid shape object supplied to shapeType.');\n    }\n\n    const keys = Object.keys(shape);\n\n    for (const key of keys) {\n      if (!(shape[key] instanceof AnyType)) {\n        throw new Error('Invalid type supplied to shape type');\n      }\n    }\n\n    this.shape = shape;\n  }\n\n  validate(value) {\n    let err = super.validate(value);\n    if (err) {\n      return err;\n    }\n\n    if (value !== null && value !== undefined) {\n      const keys = Object.keys(this.shape);\n      for (const key of keys) {\n        err = this.shape[key].validate(value[key]);\n        if (err) {\n          return err;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  toJson() {\n    return {\n      type: ShapeType.TYPE_NAME,\n      required: this.required(),\n      shape: mapObject(this.shape, (type) => type.toJson()),\n    };\n  }\n}\n\nexport default ShapeType;\n","/**\n * Created by chetanv on 15/06/16.\n */\n\nimport TypeFactory from './TypeFactory';\n\nimport AnyType from '../types/AnyType';\nimport ArrayType from '../types/ArrayType';\nimport BoolType from '../types/BoolType';\nimport FuncType from '../types/FuncType';\nimport NumberType from '../types/NumberType';\nimport ObjectType from '../types/ObjectType';\nimport StringType from '../types/StringType';\nimport SymbolType from '../types/SymbolType';\n\nimport ArrayOfType from '../types/ArrayOfType';\nimport CustomType from '../types/CustomType';\nimport InstanceOfType from '../types/InstanceOfType';\nimport ObjectOfType from '../types/ObjectOfType';\nimport OneOfType from '../types/OneOfType';\nimport OneOfTypeType from '../types/OneOfTypeType';\nimport ShapeType from '../types/ShapeType';\n\n// import _debug from 'debug';\n// const debug = _debug('factory');\n\nconst factory = new TypeFactory;\nfactory.register(AnyType, true);\nfactory.register(ArrayType, true);\nfactory.register(BoolType, true);\nfactory.register(FuncType, true);\nfactory.register(NumberType, true);\nfactory.register(ObjectType, true);\nfactory.register(StringType, true);\nfactory.register(SymbolType, true);\n\nfactory.register(ArrayOfType);\nfactory.register(CustomType);\nfactory.register(InstanceOfType);\nfactory.register(ObjectOfType);\nfactory.register(OneOfType);\nfactory.register(OneOfTypeType);\nfactory.register(ShapeType);\n\nexport default factory;\n","/**\n * Babel Starter Kit (https://www.kriasoft.com/babel-starter-kit)\n *\n * Copyright © 2015-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport factory from './factory/factory';\n\nimport AnyType from './types/AnyType';\nimport ArrayType from './types/ArrayType';\nimport BoolType from './types/BoolType';\nimport FuncType from './types/FuncType';\nimport NumberType from './types/NumberType';\nimport ObjectType from './types/ObjectType';\nimport StringType from './types/StringType';\nimport SymbolType from './types/SymbolType';\n\nimport ArrayOfType from './types/ArrayOfType';\nimport InstanceOfType from './types/InstanceOfType';\nimport ObjectOfType from './types/ObjectOfType';\nimport OneOfType from './types/OneOfType';\nimport OneOfTypeType from './types/OneOfTypeType';\nimport ShapeType from './types/ShapeType';\n\n// import _debug from 'debug';\n// const debug = _debug('index');\n\nconst PropTypes = factory.propTypes;\n\nexport {\n  PropTypes,\n\n  AnyType,\n  ArrayType,\n  BoolType,\n  FuncType,\n  NumberType,\n  ObjectType,\n  StringType,\n  SymbolType,\n\n  ArrayOfType,\n  InstanceOfType,\n  ObjectOfType,\n  OneOfType,\n  OneOfTypeType,\n  ShapeType,\n};\n\nexport default factory;\n"],"names":[],"mappings":"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"}